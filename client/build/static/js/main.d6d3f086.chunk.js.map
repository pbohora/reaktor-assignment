{"version":3,"sources":["services/index.js","Components/FormComponent/index.js","Components/PackageDetail/index.js","Components/PackageList/index.js","App.js","index.js"],"names":["getPackages","a","axios","get","response","data","updatePackage","id","updatedPackage","put","FormComponent","placeholder","name","value","handleChange","handleSubmit","buttonTag","onSubmit","onChange","className","type","PackageDetail","dependsOn","packages","inputState","useParams","singlePackage","find","pack","packageName","trim","replace","split","isLoading","description","map","dependency","index","key","to","dependencyList","reverseDependency","depndency","note","singleNote","tags","tag","e","rows","PackageList","filterTag","handleFilterChange","handleFilterSubmit","filteredPackages","listRender","length","App","useState","setPackages","setFilteredPackages","setInputState","setFilterTag","useEffect","then","sortedPackages","sortData","preventDefault","newObj","noteBody","tagBody","toLocaleLowerCase","p","sort","b","exact","path","target","filter","includes","toLowerCase","ReactDOM","render","document","getElementById"],"mappings":"qVAMMA,EAAW,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IALf,iBAII,cACZC,EADY,yBAEXA,EAASC,MAFE,2CAAH,qDAUXC,EAAa,uCAAG,WAAOC,EAAIC,GAAX,eAAAP,EAAA,sEACGC,IAAMO,IAAN,UAfT,gBAeS,YAAwBF,GAAMC,GADjC,cACdJ,EADc,yBAEbA,EAASC,MAFI,2CAAH,wD,OCUJK,G,MAvBO,SAAC,GAOhB,IANLC,EAMI,EANJA,YACAC,EAKI,EALJA,KACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,UAEA,OACE,0BAAMC,SAAUF,GACd,2BACEJ,YAAaA,EACbC,KAAMA,EACNC,MAAOA,EACPK,SAAUJ,IAEZ,4BAAQK,UAAU,cAAcC,KAAK,UAClCJ,MCwFMK,G,MAtGO,SAAC,GAKhB,IASDC,EAbJC,EAII,EAJJA,SACAT,EAGI,EAHJA,aACAU,EAEI,EAFJA,WACAT,EACI,EADJA,aAEMH,EAAOa,cAAYb,KAEnBc,EAAgBH,EAASlB,KAAKsB,MAClC,SAACC,GAAD,OAAUA,EAAKC,cAAgBjB,EAAKkB,UAMlCJ,GAAiBA,EAAcJ,YACjCA,EAAYI,EAAcJ,UACvBS,QAAQ,iBAAkB,IAC1BC,MAAM,UAgBX,OACE,6BACE,8CACCT,EAASU,UACR,8CAEA,6BACE,qCAAWP,EAAcG,aACzB,2CAAiBH,EAAcQ,aAC/B,2CACA,4BACGZ,GACCA,EAAUa,KAAI,SAACC,EAAYC,GAAb,OACZ,wBAAIC,IAAKD,GAxBA,SAACD,GAItB,OAHyBb,EAASlB,KAAKsB,MACrC,SAACC,GAAD,OAAUA,EAAKC,cAAgBO,EAAWN,UAGnC,kBAAC,IAAD,CAAMS,GAAE,mBAAcH,IAAeA,GAErCA,EAiBoBI,CAAeJ,QAGtC,oDACA,4BACGV,EAAce,mBACbf,EAAce,kBAAkBN,KAAI,SAACO,EAAWL,GAAZ,OAClC,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CAAME,GAAE,mBAAcG,IAAcA,QAI5C,uCACA,4BACGhB,EAAciB,MACbjB,EAAciB,KAAKR,KAAI,SAACS,EAAYP,GAAb,OACrB,wBAAIC,IAAKD,GAAQO,OAGvB,qCACA,4BACGlB,EAAcmB,MACbnB,EAAcmB,KAAKV,KAAI,SAACW,EAAKT,GAAN,OACrB,wBAAIC,IAAKD,GAAQS,OAGvB,0CACA,0BACE3B,UAAU,qBACVF,SAAU,SAAC8B,GAAD,OAAOhC,EAAagC,EAAGrB,EAAcnB,MAE/C,8BACEI,YAAY,QACZqC,KAAK,IACLpC,KAAK,OACLC,MAAOW,EAAWmB,KAClBzB,SAAUJ,IAEZ,4BAAQK,UAAU,mBAAlB,aAEF,yCACA,kBAAC,EAAD,CACER,YAAY,MACZC,KAAK,MACLC,MAAOW,EAAWsB,IAClBhC,aAAcA,EACdC,aAAc,SAACgC,GAAD,OAAOhC,EAAagC,EAAGrB,EAAcnB,KACnDS,UAAU,gBCnDPiC,G,MA3CK,SAAC,GAMd,IALL1B,EAKI,EALJA,SACA2B,EAII,EAJJA,UACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,iBAGMC,EAAa,SAAC/B,GAClB,OAAOA,EAASY,KAAI,SAACP,GAAD,OAClB,wBAAIU,IAAKV,EAAKrB,IACZ,kBAAC,IAAD,CAAMgC,GAAE,mBAAcX,EAAKC,cAAgBD,EAAKC,kBAKtD,OACE,6BACE,6CACCN,EAASU,UACR,8CAEA,oCACE,+CACA,kBAAC,EAAD,CACEtB,YAAY,SACZC,KAAK,YACLC,MAAOqC,EACPpC,aAAcqC,EACdpC,aAAcqC,EACdpC,UAAU,WAEZ,wBAAIG,UAAU,iBACXkC,EAAiBE,OAAS,EACvBD,EAAWD,GACXC,EAAW/B,EAASlB,WCqDrBmD,EAvFH,WAAO,IAAD,EACgBC,mBAAS,CAAExB,WAAW,EAAM5B,KAAM,KADlD,mBACTkB,EADS,KACCmC,EADD,OAEgCD,mBAAS,IAFzC,mBAETJ,EAFS,KAESM,EAFT,OAGoBF,mBAAS,CAAEd,KAAM,GAAIG,IAAK,KAH9C,mBAGTtB,EAHS,KAGGoC,EAHH,OAIkBH,mBAAS,IAJ3B,mBAITP,EAJS,KAIEW,EAJF,KAQhBC,qBAAU,WACR9D,IAAc+D,MAAK,SAAC1D,GAClB,IAAM2D,EAAiBC,EAAS5D,GAChCqD,EAAY,CAAEzB,WAAW,EAAO5B,KAAM2D,SAEvC,IAGH,IASMjD,EAAY,uCAAG,WAAOgC,EAAGxC,GAAV,iBAAAN,EAAA,6DACnB8C,EAAEmB,iBACIC,EAAS,CACbC,SAAU5C,EAAWmB,KACrB0B,QAAS7C,EAAWsB,IAAIwB,qBAJP,SAMUhE,EAAcC,EAAI4D,GAN5B,OAMb3D,EANa,OAOnBkD,EAAY,CACVzB,WAAW,EACX5B,KAAMkB,EAASlB,KAAK8B,KAAI,SAACoC,GAAD,OAAQA,EAAEhE,KAAOA,EAAKgE,EAAI/D,OAEpDoD,EAAc,CAAEjB,KAAM,GAAIG,IAAK,KAXZ,2CAAH,wDA8BZmB,EAAW,SAAC5D,GAMhB,OALmBA,EAAKmE,MAAK,SAACvE,EAAGwE,GAC/B,OAAIxE,EAAE4B,YAAc4C,EAAE5C,aAAqB,EACvC5B,EAAE4B,YAAc4C,EAAE5C,YAAoB,EACnC,MAKX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CACEpD,SAAUA,EACV4B,mBA7BmB,SAACJ,GAC1Bc,EAAad,EAAE6B,OAAO/D,QA6BhBuC,mBAzBmB,SAACL,GAC1BA,EAAEmB,iBACFP,EACEpC,EAASlB,KAAKwE,QAAO,SAACN,GAAD,OACnBA,EAAE1B,KAAKiC,SAAS5B,EAAU6B,cAAcjD,aAsBtCoB,UAAWA,EACXG,iBAAkBA,KAGtB,kBAAC,IAAD,CAAOsB,KAAK,kBACV,kBAAC,EAAD,CACEpD,SAAUA,EACVT,aA9Da,SAACiC,GACpB,IAAMlC,EAAQkC,EAAE6B,OAAO/D,MACvB+C,EAAc,2BACTpC,GADQ,kBAEVuB,EAAE6B,OAAOhE,KAAOC,MA2DbW,WAAYA,EACZT,aAAcA,OCjFxBiE,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d6d3f086.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/packages\";\r\n\r\n//query data from server with axios\r\n\r\nconst getPackages = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst getSinglePackage = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`);\r\n  return response.data;\r\n};\r\n\r\nconst updatePackage = async (id, updatedPackage) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, updatedPackage);\r\n  return response.data;\r\n};\r\n\r\nexport { getPackages, getSinglePackage, updatePackage };\r\n","import React from \"react\";\r\nimport \"./formStyle.css\";\r\n\r\nconst FormComponent = ({\r\n  placeholder,\r\n  name,\r\n  value,\r\n  handleChange,\r\n  handleSubmit,\r\n  buttonTag,\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={handleChange}\r\n      />\r\n      <button className=\"inputBotton\" type=\"submit\">\r\n        {buttonTag}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport FormComponent from \"../FormComponent\";\r\n\r\nimport \"./packageDetail.css\";\r\n\r\nconst PackageDetail = ({\r\n  packages,\r\n  handleChange,\r\n  inputState,\r\n  handleSubmit,\r\n}) => {\r\n  const name = useParams().name;\r\n\r\n  const singlePackage = packages.data.find(\r\n    (pack) => pack.packageName === name.trim()\r\n  );\r\n\r\n  //server return the dependsOn as a string,so change it to array with\r\n  //split on comma and pipe charecter \"|\".\r\n  let dependsOn;\r\n  if (singlePackage && singlePackage.dependsOn) {\r\n    dependsOn = singlePackage.dependsOn\r\n      .replace(/ *\\([^)]*\\) */g, \"\")\r\n      .split(/[|,]+/);\r\n  }\r\n\r\n  //chack if the alternate dependency that maps to a package name and provide\r\n  //the link to those dependency that maps package in the entry\r\n  const dependencyList = (dependency) => {\r\n    const mappedDependency = packages.data.find(\r\n      (pack) => pack.packageName === dependency.trim()\r\n    );\r\n    if (mappedDependency) {\r\n      return <Link to={`/package/${dependency}`}>{dependency}</Link>;\r\n    } else {\r\n      return dependency;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Package Detail</h1>\r\n      {packages.isLoading ? (\r\n        <p>Loading data...</p>\r\n      ) : (\r\n        <div>\r\n          <h2>Name: {singlePackage.packageName}</h2>\r\n          <p>Description: {singlePackage.description}</p>\r\n          <h3>Depends On:</h3>\r\n          <ul>\r\n            {dependsOn &&\r\n              dependsOn.map((dependency, index) => (\r\n                <li key={index}>{dependencyList(dependency)}</li>\r\n              ))}\r\n          </ul>\r\n          <h3> Reverse Dependency:</h3>\r\n          <ul>\r\n            {singlePackage.reverseDependency &&\r\n              singlePackage.reverseDependency.map((depndency, index) => (\r\n                <li key={index}>\r\n                  <Link to={`/package/${depndency}`}>{depndency}</Link>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n          <h3> Notes:</h3>\r\n          <ul>\r\n            {singlePackage.note &&\r\n              singlePackage.note.map((singleNote, index) => (\r\n                <li key={index}>{singleNote}</li>\r\n              ))}\r\n          </ul>\r\n          <h3>Tags:</h3>\r\n          <ul>\r\n            {singlePackage.tags &&\r\n              singlePackage.tags.map((tag, index) => (\r\n                <li key={index}>{tag}</li>\r\n              ))}\r\n          </ul>\r\n          <h3>Add Notes:</h3>\r\n          <form\r\n            className=\"textArea-container\"\r\n            onSubmit={(e) => handleSubmit(e, singlePackage.id)}\r\n          >\r\n            <textarea\r\n              placeholder=\"Notes\"\r\n              rows=\"6\"\r\n              name=\"note\"\r\n              value={inputState.note}\r\n              onChange={handleChange}\r\n            />\r\n            <button className=\"textArea-button\">Add Note</button>\r\n          </form>\r\n          <h3>Add Tags:</h3>\r\n          <FormComponent\r\n            placeholder=\"Tag\"\r\n            name=\"tag\"\r\n            value={inputState.tag}\r\n            handleChange={handleChange}\r\n            handleSubmit={(e) => handleSubmit(e, singlePackage.id)}\r\n            buttonTag=\"Add Tag\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageDetail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormComponent from \"../FormComponent\";\r\n\r\nimport \"./packageList.css\";\r\n\r\nconst PackageList = ({\r\n  packages,\r\n  filterTag,\r\n  handleFilterChange,\r\n  handleFilterSubmit,\r\n  filteredPackages,\r\n}) => {\r\n  //list render\r\n  const listRender = (packages) => {\r\n    return packages.map((pack) => (\r\n      <li key={pack.id}>\r\n        <Link to={`/package/${pack.packageName}`}>{pack.packageName}</Link>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Packages List</h1>\r\n      {packages.isLoading ? (\r\n        <p>Loading data...</p>\r\n      ) : (\r\n        <>\r\n          <h2>Filter with Tag</h2>\r\n          <FormComponent\r\n            placeholder=\"Search\"\r\n            name=\"filterTag\"\r\n            value={filterTag}\r\n            handleChange={handleFilterChange}\r\n            handleSubmit={handleFilterSubmit}\r\n            buttonTag=\"Search\"\r\n          />\r\n          <ul className=\"list-cotainer\">\r\n            {filteredPackages.length > 0\r\n              ? listRender(filteredPackages)\r\n              : listRender(packages.data)}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageList;\r\n","import React, { useState, useEffect } from \"react\";\nimport { getPackages, updatePackage } from \"./services\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport PackageDetail from \"./Components/PackageDetail\";\nimport PackageList from \"./Components/PackageList\";\n\nconst App = () => {\n  const [packages, setPackages] = useState({ isLoading: true, data: [] });\n  const [filteredPackages, setFilteredPackages] = useState([]);\n  const [inputState, setInputState] = useState({ note: \"\", tag: \"\" });\n  const [filterTag, setFilterTag] = useState(\"\");\n\n  //query all packages from server on first load of the page then sort the packages\n  // and update the package state\n  useEffect(() => {\n    getPackages().then((data) => {\n      const sortedPackages = sortData(data);\n      setPackages({ isLoading: false, data: sortedPackages });\n    });\n  }, []);\n\n  //handle input change for notes and tags\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setInputState({\n      ...inputState,\n      [e.target.name]: value,\n    });\n  };\n\n  //handle submit for notes and tags\n  const handleSubmit = async (e, id) => {\n    e.preventDefault();\n    const newObj = {\n      noteBody: inputState.note,\n      tagBody: inputState.tag.toLocaleLowerCase(),\n    };\n    const updatedPackage = await updatePackage(id, newObj); //save added noted and tags to the database\n    setPackages({\n      isLoading: false,\n      data: packages.data.map((p) => (p.id !== id ? p : updatedPackage)),\n    }); //update the package state\n    setInputState({ note: \"\", tag: \"\" });\n  };\n\n  //handle change for filter input\n  const handleFilterChange = (e) => {\n    setFilterTag(e.target.value);\n  };\n\n  //filter the packages and update filter state\n  const handleFilterSubmit = (e) => {\n    e.preventDefault();\n    setFilteredPackages(\n      packages.data.filter((p) =>\n        p.tags.includes(filterTag.toLowerCase().trim())\n      )\n    );\n  };\n\n  //sort the packages alphabetically\n  const sortData = (data) => {\n    const sortedData = data.sort((a, b) => {\n      if (a.packageName < b.packageName) return -1;\n      if (a.packageName > b.packageName) return 1;\n      return 0;\n    });\n    return sortedData;\n  };\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <PackageList\n          packages={packages}\n          handleFilterChange={handleFilterChange}\n          handleFilterSubmit={handleFilterSubmit}\n          filterTag={filterTag}\n          filteredPackages={filteredPackages}\n        />\n      </Route>\n      <Route path=\"/package/:name\">\n        <PackageDetail\n          packages={packages}\n          handleChange={handleChange}\n          inputState={inputState}\n          handleSubmit={handleSubmit}\n        />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}